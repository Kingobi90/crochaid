rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        firestore.get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() && request.auth.uid == userId;
    }
    
    // Chat images
    match /chats/{chatId}/images/{fileName} {
      allow read: if isAuthenticated() && exists(path) &&
        firestore.get(/databases/$(database)/documents/chatRooms/$(chatId)).data.participants.hasAny([request.auth.uid]);
      allow write: if isAuthenticated() && 
        firestore.get(/databases/$(database)/documents/chatRooms/$(chatId)).data.participants.hasAny([request.auth.uid]);
    }
    
    // Event images
    match /events/{eventId}/images/{fileName} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
